@charset "UTF-8";
body {
  padding: var(--padding-body);
  background-color: var(--color-light-alt);
  font-weight: 400;
  line-height: normal;
  font-family: var(--font-family-base);
  color: var(--color-dark);
}

a,
button,
input,
svg * {
  transition-duration: var(--transition-duration);
}

a {
  text-decoration: none;
  color: inherit;
}

h1, h2 {
  font-weight: 700;
}

:root {
  --color-dark: #000;
  --color-dark-alt: #4d4d4d;
  --color-light:#fff;
  --color-light-alt:#ededed;
  --color-accent:#329A93;
  --color-accent-alt:#E9F7F8;
  --border: 1px solid var(--color-dark);
  --border-radius: 20px;
  --button-height: 40px;
  --input-height: 56px;
  --padding-body: 50px;
  --margin-inner: 20px;
  --font-family-base: "Roboto", sans-serif;
  --transition-duration: .2s;
}

@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Bold.woff2") format("woff2");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Regular.woff2") format("woff2");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-ExtraLight.woff2") format("woff2");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Thin.woff2") format("woff2");
  font-weight: 100;
  font-style: normal;
  font-display: swap;
}
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями
 */
img {
  display: block;
  max-width: 100%;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  height: 100%;
}

/**
  Плавный скролл
 */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
  min-height: 100%;
  /**
    Унифицированный интерлиньяж
   */
  line-height: 1.5;
}

/**
  Приводим к единому цвету svg-элементы
 */
svg *[fill] {
  fill: currentColor;
}

svg *[stroke] {
  stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
  transition-property: fill, stroke;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
.field {
  display: flex;
  flex-direction: column;
  align-items: start;
}
.field__input {
  min-width: 240px;
  width: 100%;
  padding: 15px 20px;
  border: 1px solid var(--color-light);
  border-radius: var(--border-radius);
  height: var(--input-height);
  font-size: 20px;
}
.field__input:focus {
  border-color: var(--color-accent);
  outline: none;
}
.field__input::-moz-placeholder {
  color: var(--color-dark-alt);
}
.field__input::placeholder {
  color: var(--color-dark-alt);
}
.field__input--padding-right {
  padding-right: 60px;
}
.field__input--dark {
  background-color: var(--color-light-alt);
}

.button {
  display: flex;
  justify-content: center;
  align-items: center;
  padding-inline: 20px;
  height: var(--button-height);
  border: var(--border);
  border-radius: var(--border-radius);
  font-size: 20px;
  background-color: var(--color-light);
  cursor: pointer;
}
@media (hover: hover) {
  .button:hover {
    color: var(--color-light);
    border-color: var(--color-accent);
    background-color: var(--color-accent);
  }
}
@media (hover: none) {
  .button:active {
    color: var(--color-light);
    border-color: var(--color-accent);
    background-color: var(--color-accent);
  }
}
.button--icon {
  width: 48px;
  aspect-ratio: 1;
  border: none;
  outline: none;
  border-radius: 50%;
  padding: 0;
  background-color: transparent;
  color: var(--color-dark-alt);
}
@media (hover: hover) {
  .button--icon:hover {
    color: var(--color-accent);
    background-color: transparent;
  }
}
@media (hover: none) {
  .button--icon:active {
    color: var(--color-accent);
    background-color: transparent;
  }
}

form {
  position: relative;
}
form button {
  position: absolute;
  right: 0;
  top: 50%;
  transform: translate(0, -50%);
}

.chat-form {
  margin-top: 24px;
}

.aside {
  padding: 10px var(--margin-inner);
  border: var(--border);
  border-radius: var(--border-radius);
  background-color: var(--color-light);
  height: 100%;
}

.section {
  padding: 10px var(--margin-inner);
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: end;
}

.login {
  width: 100%;
  height: calc(100vh - var(--padding-body) * 2);
  display: flex;
  justify-content: center;
  align-items: center;
}

.header {
  margin-bottom: var(--margin-inner);
  position: relative;
}
.header .result-searching {
  display: none;
  position: absolute;
  width: 100%;
  padding: 15px 20px;
  border: var(--border);
  border-radius: var(--border-radius);
  background-color: var(--color-light);
}

.header {
  display: none;
}

.content {
  height: calc(100vh - var(--padding-body) * 2 - var(--input-height) - var(--margin-inner));
  display: none;
  align-items: center;
  justify-content: space-between;
  -moz-column-gap: var(--margin-inner);
       column-gap: var(--margin-inner);
}

.aside-rooms {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.aside-rooms__body {
  overflow-y: auto;
}

.rooms {
  font-size: 26px;
}
.rooms-item {
  padding: 10px;
  border-bottom: var(--border);
}
.rooms-item.active {
  background-color: var(--color-accent-alt);
}

.aside-users {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.aside-users__body {
  overflow-y: auto;
}

.users {
  font-size: 26px;
}

.chat-messages {
  font-size: 20px;
  max-height: 660px;
  overflow-y: auto;
  scrollbar-width: none;
}
.chat-messages::-webkit-scrollbar {
  display: none;
}
.chat-typing {
  position: absolute;
  top: -45%;
  left: 20px;
  color: var(--color-dark-alt);
}
.chat-typing__inner {
  position: relative;
}

.system-message {
  font-weight: 600;
  font-style: italic;
}

.login-overlay {
  text-align: center;
  border: none;
  padding: 30px 10px;
  background-color: var(--color-light-alt);
  border-radius: var(--border-radius);
}/*# sourceMappingURL=styles.css.map */